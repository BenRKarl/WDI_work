Part 3

Figure out the appropriate SQL commands to find out the following, and keep track of them in the file called sql_commands.txt
--------------------------------------------------------------------------------------

All columns for all players from the New York Knicks (NYK)
SELECT * FROM players WHERE team = 'NYK';

All columns for all players from the Indiana Pacers (IND) who are under 26 years old
SELECT * FROM players WHERE team = 'IND' AND age < 26;

All columns for all players, ordered from least points scored to most points scored
SELECT * FROM players ORDER BY points ASC;

Name and Points per game (points/games), for the players with the top 20 points per game
SELECT name, points/games FROM players ORDER BY points/games DESC LIMIT 20;

The average age for all players
SELECT AVG(age) FROM players;

The average age for all players on the Oklahoma City Thunder (OKC)
SELECT AVG(age) FROM players WHERE team = 'OKC';

The average age for all players who played more than 40 games
SELECT AVG(age) FROM players WHERE games > 40;

The team and total points scored from all players on that team (team points), ordered from most team points to least
SELECT team, SUM(points) FROM players GROUP BY team ORDER BY SUM(points) DESC;
--------------------------------------------------------------------------------------


Bonus

Age and the average points per game for that age, ordered from youngest to oldest
SELECT age, AVG(points/games) FROM players GROUP BY age ORDER BY age ASC;

Team and the the number of players who score above 12 points per game on that team, ordered from most to least
SELECT team, COUNT(points/games) FROM players WHERE points/games > 12 GROUP BY team ORDER BY COUNT DESC;

Gutenberg

--------------------------------------------------------------------------------------

Here is a small set of additional GROUP BY exercises using the Gutenberg data set.

GROUP BY:
1. top 20 group count of books by author_id, order by count descending
SELECT author_id, count(*) FROM books
GROUP BY author_id
ORDER BY count(*) DESC LIMIT 20;

2. number of authors grouped by first letter of name
SELECT SUBSTR(name, 1, 1) AS first, COUNT(SUBSTR(name, 1, 1)) FROM authors GROUP BY first ORDER BY first ASC;

3. top 20 authors grouped by book count in descending order
SELECT a.name, count(b.*) FROM books AS b
INNER JOIN authors AS a ON b.author_id=a.id
GROUP BY a.name
ORDER BY count(b.*) DESC LIMIT 20;
--------------------------------------------------------------------------------------

Bonus

top 15 books with 'love' in title, grouped by author

SELECT b.title, a.name FROM books AS b
INNER JOIN authors AS a ON b.author_id=a.id
WHERE lower(title) LIKE '% love %'
ORDER BY a.name ASC
LIMIT 15;

List of book titles containing the word "love", along with their author, grouped by total word count in ascending order

SELECT b.title, a.name, SUM(wc.count) FROM books AS b
INNER JOIN authors AS a ON b.author_id=a.id
INNER JOIN word_counts AS wc ON b.id=wc.book_id
WHERE lower(b.title) LIKE '% love %'
GROUP BY b.title, a.name
ORDER BY SUM(wc.count) DESC
LIMIT 10;
