1.) All columns for all players from the New York Knicks (NYK)
     SELECT * FROM players WHERE team=('NYK');


2.) All columns for all players from the Indiana Pacers (IND) who are under 26 years old
    SELECT * FROM players WHERE team=('IND') AND age < ('26');


3.) All columns for all players, ordered from least points scored to most points scored
    SELECT * FROM players ORDER BY points ASC;

4.) Name and Points per game (points/games), for the players with the top 20 points per game
    SELECT points / games AS ppg
    FROM players ORDER BY points DESC
    LIMIT 20;

5.) The average age for all players
    SELECT AVG(AGE) FROM players;
            26.6443514644351464

6.) The average age for all players on the Oklahoma City Thunder (OKC)
     SELECT AVG(AGE) FROM players where team LIKE ('OKC');
            25.4

7.) The average age for all players who played more than 40 games
    SELECT AVG(AGE) FROM players where games>40;
            26.456140350877193

8.) The team and total points scored from all players on that team (team points), ordered from most team points to least
    SELECT team, SUM(points) AS "totalpoints"
    FROM players
    GROUP BY team
    ORDER BY "totalpoints" DESC;


    BONUS

1.) Age and the average points per game for that age, ordered from youngest to oldest
    SELECT age, AVG(points/games) FROM players GROUP BY age ORDER BY age ASC;

2.) Team and the the number of players who score above 12 points per game on that team, ordered from most to least
    SELECT team, COUNT(name) FROM players WHERE (points/games) > 12 GROUP BY team ORDER BY count DESC;

    Gutenberg

1. top 20 group count of books by author_id, order by count descending
    SELECT author_id, COUNT(title) FROM books GROUP BY author_id ORDER BY count DESC;

2. number of authors grouped by first letter of name 
    SELECT SUBSTRING(name,1,1) AS substr, COUNT(*) FROM authors GROUP BY SUBSTRING(name,1,1) ORDER BY substr ASC;

3. top 20 authors grouped by book count in descending order
    SELECT a.name, COUNT(b.title) FROM authors AS a INNER JOIN books AS b ON a.id = b.author_id GROUP BY a.name ORDER BY count DESC LIMIT 20;
    
    BONUS


1.) SELECT a.name, COUNT(b.title) FROM authors AS a INNER JOIN books AS b ON b.author_id = a.id WHERE LOWER(b.title) LIKE '% love %' OR LOWER(b.title) LIKE '% love' OR LOWER(b.title) LIKE 'love %' OR LOWER(b.title) LIKE 'love' GROUP BY a.name ORDER BY count DESC LIMIT 15;

2.)
SELECT a.name, b.title FROM authors AS a INNER JOIN books AS b ON b.author_id = a.id WHERE LOWER(b.title) LIKE '% love %' OR LOWER(b.title) LIKE '% love' OR LOWER(b.title) LIKE 'love %' OR LOWER(b.title) LIKE 'love' ORDER BY a.name ASC;



