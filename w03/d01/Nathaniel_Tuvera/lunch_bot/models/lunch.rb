class Lunch
  attr_accessor :name, :count

  def initialize(options)     #pulled from has generated by db?
    @lunch_name   = options.fetch('lunch_name')
    @picked_count = options.fetch('picked_count')
  end

  def to_s
    "#{@lunch_name} has been picked #{@picked_count} times."
  end

  def save
    sql_statment = "UPDATE lunches SET lunch_name='#{@name}', picked_count=0};"
  end

  def run_sql(sql_statement)
    Lunch.run_sql(sql_statement)
  end

  def self.all
    response = run_sql('SELECT * FROM lunches;')
    lunches = response.map do |lunches_hash|
      Lunch.new(lunches_hash)
    end
    lunches
  end

  def self.find(lunch_name)
    sql_statement = "SELECT * FROM lunches WHERE lunch_name=#{lunch_name};"
    response = run_sql(sql_statement)
    Lunch.new(response.first)
  end

  def self.create(lunch_name)   # pulling lunch_name => from hash
    lunch_name = lunch_name
    picked_count = 0
    sql_statement = "INSERT INTO lunches (lunch_name, picked_count) VALUES ('#{lunch_name}', 0) RETURNING *;"
    response = run_sql(sql_statement)
    Lunch.new(response.first)
  end

  def self.run_sql(sql_statement)
    connection = PG.connect(:dbname => 'wdi_lunch')
    response = connection.exec(sql_statement)
    connection.close
    return response
  end

  def self.random()

  end

end

